@model WebApplication1.Models.Trainer
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Редактировать тренажер";
}

<div class="container mt-5">
    <h2 class="text-center">Редагувати тренажер</h2>

    <div class="text-danger">
        @Html.ValidationSummary(excludePropertyErrors: true, message: "")
    </div>

    <form asp-action="Edit" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="Id" />

        <div class="form-group">
            <label asp-for="Name">Назва</label>
            <input asp-for="Name" class="form-control" />
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label asp-for="Description">Опис</label>
            <textarea asp-for="Description" class="form-control"></textarea>
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label asp-for="Type">Тип</label>
            <input asp-for="Type" class="form-control" />
            @Html.ValidationMessageFor(m => m.Type, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label asp-for="ProductionCost">Собівартість</label>
            <input asp-for="ProductionCost" class="form-control" type="number" step="0.01" />
            @Html.ValidationMessageFor(m => m.ProductionCost, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label asp-for="Price">Ціна</label>
            <input asp-for="Price" class="form-control" type="number" step="0.01" />
            @Html.ValidationMessageFor(m => m.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label asp-for="Quantity">Кількість</label>
            <input asp-for="Quantity" class="form-control" type="number" />
            @Html.ValidationMessageFor(m => m.Quantity, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label for="ImageFile">Зображення</label>
            <input type="file" id="ImageFile" name="ImageFile" class="form-control" accept="image/*" onchange="previewNewImage(event)" />
            <div class="mt-3">
                <img id="currentImagePreview" src="@Model.ImagePath" alt="Текущее изображение" style="max-height: 200px; max-width: 100%; border: 1px solid #ddd; padding: 5px;" />
                <img id="newImagePreview" alt="Новое изображение" style="max-height: 200px; max-width: 100%; border: 1px solid #ddd; padding: 5px; display: none;" />
            </div>
        </div>

        <button type="submit" class="btn btn-primary">Зберегти</button>
        <a asp-action="Index" class="btn btn-secondary">Відміна</a>
    </form>
</div>

<script>
    function previewNewImage(event) {
        const input = event.target;
        const newPreview = document.getElementById('newImagePreview');
        const currentPreview = document.getElementById('currentImagePreview');

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
                newPreview.src = e.target.result;
                newPreview.style.display = 'block';
                currentPreview.style.display = 'none';
            };

            reader.readAsDataURL(input.files[0]);
        } else {
            newPreview.style.display = 'none';
            currentPreview.style.display = 'block';
        }
    }
</script>